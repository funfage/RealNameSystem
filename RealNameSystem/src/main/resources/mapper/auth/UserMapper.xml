<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.real.name.auth.service.repository.UserMapper">
    <resultMap id="queryMap" type="com.real.name.auth.entity.User">
        <id property="userId" column="user_id"/>
        <result property="username" column="username"/>
        <result property="phone" column="phone"/>
        <result property="password" column="password"/>
        <result property="status" column="status"/>
        <collection property="roles" ofType="com.real.name.auth.entity.Role">
            <id property="roleId" column="role_id"/>
            <result property="roleName" column="role_name"/>
            <result property="description" column="description"/>
            <collection property="permissions" ofType="com.real.name.auth.entity.Permission">
                <id property="permissionId" column="permission_id"/>
                <result property="url" column="url"/>
                <result property="name" column="name"/>
                <result property="description" column="description"/>
            </collection>
        </collection>
    </resultMap>

    <resultMap id="queryMapRole" type="com.real.name.auth.entity.User">
        <id property="userId" column="user_id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="status" column="status"/>
        <collection property="roles" ofType="com.real.name.auth.entity.Role">
            <id property="roleId" column="role_id"/>
            <result property="roleName" column="role_name"/>
            <result property="description" column="description"/>
        </collection>
    </resultMap>

    <sql id="userInfo">
        u.user_id, u.username, u.phone, u.password, u.status
    </sql>

    <insert id="saveUser" parameterType="com.real.name.auth.entity.User"
    keyProperty="user.userId" keyColumn="user_id" useGeneratedKeys="true">
        insert into `user`
        (
        username, phone, password
        )
        values
        (
        #{user.username}, #{user.phone}, #{user.password}
        )
    </insert>

    <insert id="saveUserProjects">
        <foreach collection="projectSet" item="projectCode" separator=";">
            insert into
              user_project (user_id, project_code)
            values
              (#{userId}, #{projectCode})
        </foreach>
    </insert>

    <update id="updateUser" useGeneratedKeys="true">
        update
          `user`
        <set>
            <if test="user.userId != null">
                user_id = #{user.userId},
            </if>
            <if test="user.username != null and user.username != ''">
                username = #{user.username},
            </if>
            <if test="user.password != null and user.password != ''">
                password = #{user.password},
            </if>
            <if test="user.status != null">
                status = #{user.status},
            </if>
        </set>
        where
          user_id = #{user.userId}
    </update>

    <update id="updateUserByPhone">
        update
          `user`
        <set>
            <if test="user.username != null and user.username != ''">
                user_name = #{user.username}
            </if>
            <if test="user.password != null and user.password != ''">
                password = #{user.password},
            </if>
            <if test="user.status != null">
                status = #{user.status},
            </if>
        </set>
        where
          phone = #{user.phone}
    </update>

    <update id="updateUserRole" useGeneratedKeys="true">
        update
          `user_role`
        set
          role_id = #{roleId}
        where
          user_id = #{userId}
    </update>

    <delete id="deleteUserByUserId">
        delete from
          `user`
        where
          user_id = #{userId}
    </delete>

    <insert id="saveUserRole">
        insert into
          user_role (user_id, role_id)
        values
          (#{userId}, #{roleId})
    </insert>

    <delete id="deleteUserProjectByUserId">
        delete from
          user_project
        where
          user_id = #{userId}
    </delete>

    <select id="getUsers" resultMap="queryMap">
        select
          u.user_id, u.username, u.phone, u.password, u.status,
          r.role_id, r.role_name, r.description
        from
          `user` u, role r, user_role ur
        where
          u.user_id = ur.user_id
        and
          r.role_id = ur.role_id
    </select>

    <select id="getUserByUserId" resultMap="queryMapRole">
        select
          u.user_id, u.username, u.phone, u.password, u.status,
          r.role_id, r.role_name
        from
          `user` u, role r, user_role ur
        where
          u.user_id = ur.user_id
        and
          r.role_id = ur.role_id
        and
          u.user_id = #{userId}
    </select>

    <select id="getUserByPhone" resultMap="queryMap">
        select
          user_id, username, phone, password, status from `user`
        where
          phone = #{phone}
    </select>

    <select id="getUserPermissionIds" parameterType="integer" resultType="string">
        select
          r.permission_ids
        from
          user u, role r, user_role ur
        where
          u.user_id = ur.user_id
        and
          r.role_id = ur.role_id
        and
          u.user_id = #{userId}
    </select>

    <select id="getUserByPassword" resultMap="queryMap">
        select
          u.user_id, u.username, u.phone, u.password, u.status,
          r.role_id, r.role_name
        from
          `user` u, role r, user_role ur
        where
          u.user_id = ur.user_id
        and
          r.role_id = ur.role_id
        and
          u.password = #{password}
        and
          u.status = 1
    </select>

    <select id="getUserProject" resultType="string" parameterType="integer">
        select
          project_code
        from
          user_project
        where
          user_id = #{userId}
    </select>

    <select id="countUserNum" resultType="integer">
        select
          count(user_id)
        from
          user
    </select>

    <select id="countTodayUserNum" resultType="integer">
        select
          count(user_id)
        from
          user
        where
          create_time &gt;= DATE_FORMAT(CURDATE(),'%Y-%m-%d %H:%i:%s')
        and
          create_time &lt;= DATE_FORMAT(date_add(CURDATE(),interval 1 day),'%Y-%m-%d %H:%i:%s')
    </select>


</mapper>











